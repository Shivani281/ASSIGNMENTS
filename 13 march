{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a0c56e60-26de-4461-895c-3c020678f212",
   "metadata": {},
   "outputs": [],
   "source": [
    "Q1: Assumptions for using Analysis of Variance (ANOVA):\n",
    "\n",
    "Independence: Observations within each group are independent of each other. Violation: If measurements within a group are correlated, it can affect the validity of ANOVA.\n",
    "\n",
    "Normality: The residuals (differences between observed and predicted values) are normally distributed within each group. Violation: If residuals are not normally distributed, ANOVA results may not be valid.\n",
    "\n",
    "Homogeneity of Variance: The variances of the groups are approximately equal. Violation: Heteroscedasticity (unequal variances) can lead to incorrect conclusions.\n",
    "\n",
    "Random Sampling: Samples are drawn randomly from the populations of interest. Violation: Non-random sampling can introduce bias into the results.\n",
    "\n",
    "Additivity: The population means are additive, meaning that the overall variance is a sum of the variances within each group. Violation: Non-additivity can affect the validity of ANOVA.\n",
    "\n",
    "Examples of violations:\n",
    "\n",
    "Outliers or extreme values within groups.\n",
    "Skewed distributions within groups.\n",
    "Non-normality of residuals.\n",
    "Unequal variances (heteroscedasticity).\n",
    "Lack of independence, such as in repeated measures designs.\n",
    "Q2: There are three main types of ANOVA:\n",
    "\n",
    "One-Way ANOVA: Used to compare means of three or more independent (unrelated) groups to determine if there are statistically significant differences between them. It's used when you have one categorical independent variable (e.g., different treatments) and a continuous dependent variable (e.g., test scores).\n",
    "\n",
    "Two-Way ANOVA: Extends one-way ANOVA by examining the influence of two categorical independent variables (factors) on a continuous dependent variable. It assesses main effects and interaction effects between the two factors. Typically used in experimental designs with two factors (e.g., treatment type and gender).\n",
    "\n",
    "Repeated Measures ANOVA: Used when the same subjects are used for each treatment (within-subjects design). It examines the effect of a categorical independent variable (e.g., time points) on a continuous dependent variable while accounting for the correlation between repeated measurements on the same subjects.\n",
    "\n",
    "Q3: The partitioning of variance in ANOVA involves breaking down the total variability observed in the data into different components:\n",
    "\n",
    "Total Sum of Squares (SST): Measures the total variability in the data.\n",
    "\n",
    "Explained Sum of Squares (SSE): Measures the variability explained by the independent variable(s) or factors.\n",
    "\n",
    "Residual Sum of Squares (SSR): Measures the unexplained variability or error in the model.\n",
    "\n",
    "Understanding this partitioning is important because it allows us to assess how much of the total variability in the data is accounted for by the factors being studied (SSE) and how much is left unexplained (SSR). This information is crucial in determining whether the factors have a significant effect on the dependent variable.\n",
    "\n",
    "Q4: In a one-way ANOVA using Python, you can calculate the total sum of squares (SST), explained sum of squares (SSE), and residual sum of squares (SSR) using the following code:\n",
    "import numpy as np\n",
    "import scipy.stats as stats\n",
    "\n",
    "# Data for different groups (replace with your data)\n",
    "group1 = [data for group 1]\n",
    "group2 = [data for group 2]\n",
    "group3 = [data for group 3]\n",
    "\n",
    "# Combine the data into one array\n",
    "data = np.concatenate((group1, group2, group3))\n",
    "\n",
    "# Calculate the overall mean\n",
    "overall_mean = np.mean(data)\n",
    "\n",
    "# Calculate SST\n",
    "sst = np.sum((data - overall_mean) ** 2)\n",
    "\n",
    "# Calculate SSE\n",
    "sse = np.sum((group1 - np.mean(group1)) ** 2) + np.sum((group2 - np.mean(group2)) ** 2) + np.sum((group3 - np.mean(group3)) ** 2)\n",
    "\n",
    "# Calculate SSR\n",
    "ssr = sst - sse\n",
    "\n",
    "print(\"Total Sum of Squares (SST):\", sst)\n",
    "print(\"Explained Sum of Squares (SSE):\", sse)\n",
    "print(\"Residual Sum of Squares (SSR):\", ssr)\n",
    "These values are essential for calculating the F-statistic and conducting hypothesis tests in ANOVA.\n",
    "\n",
    "Q5: In a two-way ANOVA using Python, you can calculate the main effects and interaction effects using libraries like statsmodels. Here's a simplified example:\n",
    "\n",
    "import pandas as pd\n",
    "import statsmodels.api as sm\n",
    "from statsmodels.formula.api import ols\n",
    "\n",
    "# Create a DataFrame with your data (replace with your data)\n",
    "df = pd.DataFrame({'Software': ['A', 'B', 'C'] * 30,\n",
    "                   'Experience': ['Novice', 'Experienced'] * 45,\n",
    "                   'Time': [time data]})\n",
    "\n",
    "# Fit a two-way ANOVA model\n",
    "model = ols('Time ~ Software * Experience', data=df).fit()\n",
    "\n",
    "# Get the ANOVA table\n",
    "anova_table = sm.stats.anova_lm(model, typ=2)\n",
    "\n",
    "print(anova_table)\n",
    "This code fits a two-way ANOVA model, and you can examine the main effects and interaction effects from the resulting ANOVA table.\n",
    "\n",
    "Q6: If you conducted a one-way ANOVA and obtained an F-statistic of 5.23 and a p-value of 0.02, you can conclude that there are significant differences between the groups. Specifically:\n",
    "\n",
    "F-statistic (5.23): Indicates that the variability between group means is larger than what you would expect by random chance.\n",
    "\n",
    "p-value (0.02): Indicates that the probability of observing such extreme differences between group means due to random chance is 2%. Since this is less than your chosen significance level (e.g., 0.05), you would reject the null hypothesis.\n",
    "\n",
    "Interpretation: You have enough evidence to conclude that there are significant differences between at least some of the group means. However, to determine which specific groups are different, you would need to conduct post-hoc tests.\n",
    "\n",
    "Q7: Handling missing data in a repeated measures ANOVA can be done using various methods:\n",
    "\n",
    "Listwise Deletion: Remove cases with missing data from the analysis. This can lead to a loss of statistical power and may introduce bias if the missing data is not random.\n",
    "\n",
    "Mean Imputation: Replace missing values with the mean of the available data for that variable. This can lead to underestimation of variability and bias.\n",
    "\n",
    "Interpolation: Estimate missing values based on existing data points or patterns in the data. This can be more accurate but may introduce assumptions about the data.\n",
    "\n",
    "Multiple Imputation: Create multiple imputed datasets, analyze each separately, and then pool the results. This accounts for the uncertainty due to missing data but can be computationally intensive.\n",
    "\n",
    "The choice of method depends on the nature of the data and the assumptions you are willing to make. Using different methods can lead to different results, so it's important to document and justify your choice.\n",
    "\n",
    "Q8: Common post-hoc tests used after ANOVA include:\n",
    "\n",
    "Tukey's Honestly Significant Difference (HSD): Used to compare all possible pairs of group means. It controls the familywise error rate.\n",
    "\n",
    "Bonferroni Correction: Adjusts the significance level for multiple comparisons. It's more conservative but reduces the risk of Type I errors.\n",
    "\n",
    "Dunnett's Test: Used to compare each group mean to a control group mean.\n",
    "\n",
    "Sidak Correction: Similar to Bonferroni, but takes into account the number of comparisons.\n",
    "\n",
    "You would use post-hoc tests when you have rejected the null hypothesis in ANOVA and want to identify which specific group(s) differ from each other.\n",
    "\n",
    "Example scenario: After conducting a one-way ANOVA to compare the effectiveness of three different teaching methods, you find a significant difference. You would then use post-hoc tests to determine which specific pairs of teaching methods are significantly different in terms of their effects on student performance.\n",
    "\n",
    "Q9: To conduct a one-way ANOVA in Python to compare the mean weight loss of three diets (A, B, and C) using sample data, you can use libraries like scipy.stats or statsmodels. Here's a simplified example using scipy.stats:\n",
    "\n",
    "import scipy.stats as stats\n",
    "\n",
    "# Sample data (replace with your data)\n",
    "diet_A = [weights for diet A]\n",
    "diet_B = [weights for diet B]\n",
    "diet_C = [weights for diet C]\n",
    "\n",
    "# Perform one-way ANOVA\n",
    "f_statistic, p_value = stats.f_oneway(diet_A, diet_B, diet_C)\n",
    "\n",
    "print(\"F-statistic:\", f_statistic)\n",
    "print(\"p-value:\", p_value)\n",
    "\n",
    "# Interpret the results\n",
    "if p_value < 0.05:\n",
    "    print(\"There is a significant difference in mean weight loss between the diets.\")\n",
    "else:\n",
    "    print(\"There is no significant difference in mean weight loss between the diets.\")\n",
    "Q10: To conduct a two-way ANOVA in Python to determine if there are main effects or interaction effects between software programs (A, B, C) and employee experience levels (novice vs. experienced) using sample data, you can use libraries like statsmodels. Here's a simplified example:\n",
    "\n",
    "import pandas as pd\n",
    "import statsmodels.api as sm\n",
    "from statsmodels.formula.api import ols\n",
    "\n",
    "# Create a DataFrame with your data (replace with your data)\n",
    "df = pd.DataFrame({'Software': ['A', 'B', 'C'] * 10,\n",
    "                   'Experience': ['Novice', 'Experienced'] * 15,\n",
    "                   'Time': [time data]})\n",
    "\n",
    "# Fit a two-way ANOVA model\n",
    "model = ols('Time ~ Software * Experience', data=df).fit()\n",
    "\n",
    "# Get the ANOVA table\n",
    "anova_table = sm.stats.anova_lm(model, typ=2)\n",
    "\n",
    "print(anova_table)\n",
    "The resulting ANOVA table will provide information about main effects and interaction effects between software programs and employee experience levels.\n",
    "\n",
    "Q11: To conduct a two-sample t-test in Python to determine if there are significant differences in test scores between the control group (traditional teaching method) and the experimental group (new teaching method) using sample data:\n",
    "import scipy.stats as stats\n",
    "\n",
    "# Sample data (replace with your data)\n",
    "control_group = [scores for control group]\n",
    "experimental_group = [scores for experimental group]\n",
    "\n",
    "# Perform two-sample t-test\n",
    "t_statistic, p_value = stats.ttest_ind(control_group, experimental_group)\n",
    "\n",
    "print(\"T-statistic:\", t_statistic)\n",
    "print(\"p-value:\", p_value)\n",
    "\n",
    "# Interpret the results\n",
    "if p_value < 0.05:\n",
    "    print(\"There is a significant difference in test scores between the two groups.\")\n",
    "else:\n",
    "    print(\"There is no significant difference in test scores between the two groups.\")\n",
    "If the results are significant, you can follow up with post-hoc tests to determine which group(s) differ significantly from each other.\n",
    "\n",
    "Q12: To conduct a repeated measures ANOVA in Python to determine if there are significant differences in daily sales between three retail stores (Store A, Store B, and Store C) using sample data:\n",
    "import pandas as pd\n",
    "import statsmodels.api as sm\n",
    "from statsmodels.stats.anova import AnovaRM\n",
    "\n",
    "# Create a DataFrame with your data (replace with your data)\n",
    "df = pd.DataFrame({'Store': ['Store A', 'Store B', 'Store C'] * 30,\n",
    "                   'Day': [day data],\n",
    "                   'Sales': [sales data]})\n",
    "\n",
    "# Fit a repeated measures ANOVA model\n",
    "model = AnovaRM(df, 'Sales', 'Day', within=['Store']).fit()\n",
    "\n",
    "# Get the ANOVA table\n",
    "anova_table = model.anova_table\n",
    "\n",
    "print(anova_table)\n",
    "The resulting ANOVA table will provide information about the significance of differences in sales between the three stores, and post-hoc tests can be used to determine which stores differ significantly from each other if the results are significant.\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
