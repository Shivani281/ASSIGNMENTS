{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "6a113c30-434f-4686-845c-2fa3088aee3a",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (1252971455.py, line 2)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  Cell \u001b[0;32mIn[1], line 2\u001b[0;36m\u001b[0m\n\u001b[0;31m    classes and objects are the fundamental building blocks of object-oriented programming , which help us to implement several key concept\u001b[0m\n\u001b[0m                        ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "ans-1\n",
    "classes and objects are the fundamental building blocks of object-oriented programming , which help us to implement several key concept\n",
    "in oops.\n",
    "example of class can  be car and objects of the class car can be BMW,Mercedes,Jaguar."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a7598818-9694-43a9-bf37-9d39b6f3183d",
   "metadata": {},
   "outputs": [],
   "source": [
    "ans-2\n",
    "inheritance,polymorphism,Encapsulation and abstraction."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "88900a25-4dab-4e21-9ccf-7dafef6c130b",
   "metadata": {},
   "outputs": [],
   "source": [
    "ans-3\n",
    "\"__init__()\"is a reserved method in python classes. it is called as a constructor in object oriented  terminology\n",
    "this method is called when an object is created from a class and it allows the class to initialize the attributes of the class."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "1154dffa-1d44-4fd9-8d06-8eb68cc1a869",
   "metadata": {},
   "outputs": [
    {
     "ename": "IndentationError",
     "evalue": "unexpected indent (271594487.py, line 5)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  Cell \u001b[0;32mIn[16], line 5\u001b[0;36m\u001b[0m\n\u001b[0;31m    self.phone_number = phone_number\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mIndentationError\u001b[0m\u001b[0;31m:\u001b[0m unexpected indent\n"
     ]
    }
   ],
   "source": [
    "class pwskills :\n",
    "    \n",
    "    def__init__(self, phone_number, email_id, student_id)\n",
    "    \n",
    "          self.phone_number = phone_number\n",
    "                  self.email_id = email_id\n",
    "                  self.student_id = student_id\n",
    "        \n",
    "    def return_student_deetials(self):\n",
    "        return self.student_id, self.phone_number, self.email_id"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4823b03f-ce46-4724-86a2-91d0e37a9523",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e03be4eb-2699-459d-a580-dc828bbf894a",
   "metadata": {},
   "outputs": [],
   "source": [
    "ans-4\n",
    "self represents the instant of the class . By using the \"self\" we can access the attributes and methods of the class in python."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5a845c32-3d91-405f-8cb5-3fc481106e51",
   "metadata": {},
   "outputs": [],
   "source": [
    "ans-5\n",
    "inheritance is the process of obtaining properties and characteristics of another class.\n",
    "single inheritance,multiple inheritance,multilevel inheritance, hierarchical inheritance,hybride inheritance."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
